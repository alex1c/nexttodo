import React, { useState, useEffect } from "react";
import MyStyles from "./TasksList.module.css";
import DeleteButton from "../DeleteButton/DeleteButton";
import { useRouter } from "next/navigation";
import { revalidatePath } from "next/cache";
import Link from "next/link";


function TasksList(props) {
  const [category, setCategory] = useState("");
  const [taskList, setTaskList] = useState([]);

  const router = useRouter();

  //–ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ—Ç—á
  useEffect(() => {
    setCategory(props.category);
    handleSubmit();
  }, []);

  //—ç—Ç–∞ –ø–æ–µ–±–µ–Ω—å –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫. –í –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–æ–º–∏—Å –±–æ–¥–∏ –¥–∞—Ç–∞, –∞ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –≤—ã–≤–æ–¥–∏–ª–æ. –ß–µ—Ä–µ–∑ —ç—Ç—É –ø—Ä–æ–∫–ª–∞–¥–∫—É —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–¥–∞–ª–æ
  async function FackingPromice(hren) {
    //console.log(hren);
    setTaskList(hren);
  }

  const returnMessage = function () {
    // console.log('—Ç—Ä—É–ª—è–ª—è-----');
    handleSubmit();
  };

  const handleSubmit = async () => {
    //console.log("üöÄ ~ file: TasksList.jsx:7 ~ TasksList ~ taskList:", taskList);

    try {
      // console.log("props.category---", props.category);
      let str1 = "http://localhost:3000/api/tasks?cat=";
      let str2 = props.category;
      //–ø–æ—á–µ—Å–º—É —ç—Ç–∞ —Å—É–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∞ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º —Å–ª–æ–∂–µ–Ω–∏–µ–º —Å—Ç—Ä–æ–∫? –¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–æ—Å—Ç—ã–ª—å? str+str?
      //const res = await fetch(`"http://localhost:3000/api/tasks?cat="${props.category}`, {
      /* const res = await fetch("http://localhost:3000/api/tasks?cat=" ,{ */
      const res = await fetch(str1 + str2, {
        method: "GET",
        headers: {
          "Content-type": "application/json",
        },

        // body: JSON.stringify({ category }),
      });

      const dat = res.json().then((data) => {
        FackingPromice(data.body);
      });

      if (res.ok) {
        //const path = res.url
        //router.push('/');
        //router.refresh();
        router.refresh();

        //console.log('-*-*---',path);
        //revalidatePath(path)
        //—Å–Ω–∞—á–∞–ª–∞ –¥—É–º–∞–ª –∑–¥–µ—Å—å –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ—á–∏—Ç–∞—é—Ç—Å—è –ø–æ—Å—Ç—ã –∏ —É–±–µ—Ä—É—Ç—Å—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ, –Ω–æ –Ω–µ—Ç. –ü—Ä–∏—à–ª–æ—Å—å –æ—Ç–¥–µ–ª—å–Ω–æ –¥–µ—Ä–≥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å
        return res;
      } else {
        throw new Error("–ó–∞–¥–∞—á–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã ");
      }
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div className={MyStyles.MainAccordionMainDiv}>
      {taskList.map((item) => (
        <div key={item._id} className={MyStyles.TaskListMainDiv}>
          {/*  <div className="card w-96 bg-base-100 shadow-xl "> */}
          <div className="card-body ">
            <h2 className="card-title">{item.name}</h2>
            <p>{item.body}</p>
            <div className="card-actions justify-between">
              {/*  <button className={MyStyles.btnEdit}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button> */}
              <Link href={`/editTask/${item._id}`}>
                <button className={MyStyles.btnEdit}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
              </Link>

              {/* –≤ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–¥–∞–µ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ–º–∏—Å–∞ —Ñ—É–Ω–∫—Ü–∏—é. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥–µ—Ä–≥–∞–µ–º –µ–µ –∏ –æ–Ω–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–µ—Ç—á */}
              <DeleteButton
                idDelet={item._id}
                funcReturn={returnMessage}
              ></DeleteButton>
            </div>
          </div>
          {/* </div> */}
        </div>
      ))}
    </div>
  );
}

export default TasksList;
